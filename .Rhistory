install.packages("psychometrics")
install.packages("Psychometrics")
install.packages("Rcmdr") # This only needs to be done once
install.packages("irtoys") # IRT models
install.packages("ltm") # latent trait models, 1, 2, 3-PL models, GR, GPCM
library(nlme) # HLM models
install.packages("lme4") # HLM aka mixed effects modeling, can do Rasch modeling
install.packages("lavaan") # CFA, SEM simple output/model syntax to MPlus
install.packages("sem") # Another SEM program
install.packages("psych") # CTT, FA, http://personality-project.org/r/
install.packages("plyr") # Data manipulation
install.packages("reshape") # Reshaping data from wide to long format
install.packages("ggplot2") # Graphing package
install.packages("equate") # Equating
install.packages("profileR") # Profile analysis
install.packages("mice") # multiple imputation
install.packages("mirt") # multidimensional IRT
install.packages("Psychometrics")
install.packages("stringr")
install.packages("qcc")
install.package("nlme")
install.packages("nlme")
install.packages("psychometric")
??randomforest
install.packages("randomForest")
getwd()
dir()
?c()
?cbind()
x <- 1:4
y<-2
z <- x+y
z
class(z)
getwd()
dir()
read("hw1_data.csv")
read.csv("hw1_data.csv")
quiz1 <- read.csv("hw1_data.csv")
?as.data.frame()
quiz1.df <- as.data.frame(quiz1)
quiz1
quiz1.df
typeof(quiz1)
typeof(quiz1.df)
type(quiz1)
?read.csv()
quiz1.df <- read.csv("hw1_data.csv")
?matrix()
head(quiz1.df)
tail(quiz1.df)
quiz1.df[quiz1.df$ozone, 47]
quiz1.df[quiz1.df$nrow == 47, "ozone"]
?nrow()
quiz1.df$id <- 1:nrow(quiz1.df)
quiz1.df[quiz1.df$nrow == 47, "ozone"]
quiz1.df[quiz1.df$id == 47, "ozone"]
quiz1.df[quiz1.df$id == 47, "Ozone"]
quiz1.df[quiz1.df$nrow == 47, "Ozone"]
is.na(Ozone)
is.na("Ozone")
is.na(quiz1.df$Ozone)
miss.ozone <- is.na(quiz1.df$Ozone)
summary(miss.ozona)
summary(miss.ozone)
summary(Ozone)
summary(quiz1.df$Ozone)
View(quiz1.df)
?mean()
mean(quiz1.df$Ozone, na.rm = T)
mean(quiz1.df$Ozone, na.rm = F)
x <- quiz1.df$Ozone > 31
?subset()
subset(quiz1.df, Ozone > 31 & Temp > 90)
q18 <- subset(quiz1.df, Ozone > 31 & Temp > 90)
mean(q18$Solar.R)
quiz1.df[quiz1.df$Month == 6 mean(quiz1.df$Temp, na.rm = T)]
subset(quiz1.df, Month == 6)
q19 <- subset(quiz1.df, Month == 6)
mean(q19$Temp)
q20 <- subset(quiz1.df, Month == 5)
summary(q20$Ozone)
?save()
save(quiz1.df, "quiz1.rda")
save.image("~/R_vinnsla/quiz1.rda.RData")
load("~/R_vinnsla/quiz1.rda.RData")
save.image("~/R_vinnsla/quiz1.rda.rda.RData")
save.image("~/R_vinnsla/quiz1.rda")
?cbind()
#verkefni 1 í r programming.
#lesa inn skránna með skipun sem breytir csv skrá í dataframe.
quiz1.df <- read.csv("hw1_data.csv")
#tjekka á fyrstu og síðustu tilfellum
head(quiz1.df)
tail(quiz1.df)
#tjekka á gildi tilfellis 47 í ozone. Fyrst bý ég til id breytu.
quiz1.df$id <- 1:nrow(quiz1.df)
#svo fletti ég upp.
quiz1.df[quiz1.df$id == 47, "Ozone"]
#til að tjekka ´fjölda auðra gilda í Ozone
summary(miss.ozone)
#reikna meðaltal Ozone að frátöldum auðum gildum.
mean(quiz1.df$Ozone, na.rm = TRUE)
#Extract the subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90. What is the mean of Solar.R in this subset?
#ég nota subset skipun til að klára þetta og setja það í object sem ég reikna síðan meðaltal fyrir Solar.R
q18 <- subset(quiz1.df, Ozone > 31 & Temp > 90)
mean(q18$Solar.R)
#What is the mean of "Temp" when "Month" is equal to 6?
q19 <- subset(quiz1.df, Month == 6)
mean(q19$Temp)
#What was the maximum ozone value in the month of May (i.e. Month = 5)?
q20 <- subset(quiz1.df, Month == 5)
summary(q20$Ozone)
#vista þetta út sem .rda skrá.
save.image("~/R_vinnsla/quiz1.rda")
miss.ozone <- is.na(quiz1.df$Ozone)
summary(miss.ozone)
save.image("~/R_vinnsla/quiz1.rda")
install.packages("KernSmooth")
library(KernSmooth)
library(KernSmooth)
library(KernSmooth)
install.packages("KernSmotth")
install.packages("KernSmooth")
library(Kernsmooth)
library(KernSmooth)
load("~/R_vinnsla/quiz1.rda")
getwd()
dir()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
getwd()
setwd("C:/Users/Notandi/Documents/coursera/datasciencecoursera/ProgrammingAssignment2")
dir()
load("cachematrix.R")
makeCacheMatrix <- function(x = matrix()){
m <- NULL
set <- function(y){
x <<- y
m <<- NULL #store matrix in cache
}
get <- function() x #get matrix
setInverse <- function(solve) m<<- solve #set inverse matrix
getInverse <- function() m #get inverse matrix
list(set = set, get = get,
setInverse = setInverse,
getInverse = getInverse) ## create list of functions
}
makeCacheMatrix(x)
y <- makeCacheMatrix(x)
y
?message()
message("ABC", "DEF")
